import { patch } from 'netmd-js';
import { Exploit } from '../exploit';

export class KillEepromWrite extends Exploit {
    public static _name = 'KillEepromWrite';
    public _policies = {
        stateManagerUnpatchLegal: true,
    };

    protected getPropertyStore() {
        return {
            spiWriteEEPROM: {
                'R1.000': 0x0000df40,
                'R1.100': 0x0000e070,
                'R1.200': 0x0000e18c,
                'R1.300': 0x0000e224,
                'R1.400': 0x0000e224,

                'S1.000': 0x0001e678,
                'S1.100': 0x0001c7e8,
                'S1.200': 0x0001ca8c,
                'S1.300': 0x0001cf28,
                'S1.400': 0x0001e05c,
                'S1.500': 0x0001e2d4,
                'S1.600': 0x0001e58c,
            },
            bxLR: {
                '*': new Uint8Array([0x70, 0x47, 0x70, 0x47]),
            },
        };
    }

    async init() {
        await super.init();
        await patch(
            this.factoryIface,
            this.getProperty('spiWriteEEPROM'),
            this.getProperty('bxLR'),
            this.stateManager.getIncrementalPatchNumber(),
            this.stateManager.getMaxPatchesAmount()
        );
    }
}

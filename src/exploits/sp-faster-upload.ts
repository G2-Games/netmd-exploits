import { patch, unpatch } from "netmd-js";
import { Exploit, VersionPropertyStore } from "../exploit";
import { formatUIntQuery } from "../utils";

export class SpeedupSPUpload extends Exploit{
    static _name = "SpeedupSPUpload";

    protected patchNumber0: number = -1;
    protected patchNumber1: number = -1;
    protected getPropertyStore(): VersionPropertyStore {
        return {
            patch1Address: {
                "S1.600": 0x000783cc,
            },
            patch1Value: {
                "S1.600": formatUIntQuery("41310160"),
            },
            patch2Address: {
                "S1.600": 0x0001ac9c,
            },
            patch2Value: {
                "S1.600": formatUIntQuery("000f0fe0"),
            },
        };
    }

    async init() {
        await super.init();
        this.patchNumber0 = this.stateManager.getIncrementalPatchNumber();
        this.patchNumber1 = this.stateManager.getIncrementalPatchNumber();
    }

    async enable(){
        await patch(
            this.factoryIface,
            this.getProperty("patch1Address"),
            this.getProperty("patch1Value"),
            this.patchNumber0,
            this.stateManager.getMaxPatchesAmount()
        );
        await patch(
            this.factoryIface,
            this.getProperty("patch2Address"),
            this.getProperty("patch2Value"),
            this.patchNumber1,
            this.stateManager.getMaxPatchesAmount()
        );
    }

    async disable(){
        await unpatch(
            this.factoryIface,
            this.patchNumber0,
            this.stateManager.getMaxPatchesAmount()
        );
        await unpatch(
            this.factoryIface,
            this.patchNumber1,
            this.stateManager.getMaxPatchesAmount()
        );
    }
}
